[  {    "type": "post",    "url": "/email/contact",    "title": "Contact GymFlow",    "name": "ContactUs",    "group": "Email",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Your email.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Your name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "topic",            "description": "<p>Why are you contacting us.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Your message.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "sent",            "description": "<p>Bool of sent status.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"sent\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "FailedToSend",            "description": "<p>There was an issue sending the email</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"someError\",\n  \"sent\": false\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/email.js",    "groupTitle": "Email"  },  {    "type": "post",    "url": "/email/signup",    "title": "Join mailing list",    "name": "JoinMailingList",    "group": "Email",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First name of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last name of user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "subscribed",            "description": "<p>Bool of whether subscribe was successful.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"subscribed\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/email.js",    "groupTitle": "Email"  },  {    "type": "post",    "url": "/email/passwordreset",    "title": "Reset password",    "name": "PasswordReset",    "group": "Email",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of account to reset password of.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "subscribed",            "description": "<p>Bool of whether email send was successful.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"sent\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/email.js",    "groupTitle": "Email"  },  {    "type": "post",    "url": "/follow",    "title": "Follow a user",    "name": "Follow",    "group": "Follows",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "followUserId",            "description": "<p>Id of user to follow.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "followed",            "description": "<p>Boolean of follow status</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"followed\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/follow.js",    "groupTitle": "Follows"  },  {    "type": "get",    "url": "/follow",    "title": "Get all follows of logged in user",    "name": "GetFollows",    "group": "Follows",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "follows",            "description": "<p>List of all the users this person is following</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"follows\": [\n     {\n       \"name\": \"Mike Mitrakos\",\n       \"username\": \"mitrakmt\",\n       \"id\": 1\n     }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/follow.js",    "groupTitle": "Follows"  },  {    "type": "delete",    "url": "/follow",    "title": "Unfollow a user",    "name": "Unfollow",    "group": "Follows",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "userToUnfollow",            "description": "<p>Id of user to unfollow.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "unfollowed",            "description": "<p>Boolean of successful unfollow</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"unfollowed\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/follow.js",    "groupTitle": "Follows"  },  {    "type": "get",    "url": "/subscription",    "title": "Get all subscriptions",    "name": "GetSubscriptions",    "group": "Subscriptions",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "subscriptions",            "description": "<p>List of all the user's subscriptions</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"subscriptions\": [\n     {\n       \"name\": \"Mike Mitrakos\",\n       \"username\": \"mitrakmt\",\n       \"id\": 1,\n       \"pricePerMonth\": 45\n     }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/subscription.js",    "groupTitle": "Subscriptions"  },  {    "type": "post",    "url": "/subscription",    "title": "Subscribe to a user",    "name": "Subscribe",    "group": "Subscriptions",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "followUserId",            "description": "<p>Id of user to follow. TODO: add everything that has to do with stripe</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "subscribed",            "description": "<p>Boolean of subscribed status</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"subscribed\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/subscription.js",    "groupTitle": "Subscriptions"  },  {    "type": "delete",    "url": "/subscription",    "title": "Unsubscribe to a user",    "name": "Unsubscribe",    "group": "Subscriptions",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "userToUnsubscribeTo",            "description": "<p>Id of user to unsubscribe to.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "unsubscribed",            "description": "<p>Boolean of successful unsubscribe</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"unsubscribed\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/subscription.js",    "groupTitle": "Subscriptions"  },  {    "type": "get",    "url": "/user/username/:username",    "title": "Check if username is already taken",    "name": "CheckIfUsernameInUse",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username to check</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "taken",            "description": "<p>Boolean whether username is taken.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"taken\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "delete",    "url": "/user",    "title": "Delete user",    "name": "DeleteUser",    "group": "User",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "deleted",            "description": "<p>Bool if deleted.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"deleted\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user",    "title": "Get current user object",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p>"          },          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "email_verified",            "description": "<p>Bool if email_verified of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Role of the User.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "interests",            "description": "<p>Selected interests of the User.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"John Doe\",\n  \"email\": \"nick.mitrakos@gmail.com\",\n  \"username\": \"nmitrakos\",\n  \"email_verified\": false,\n  \"role\": \"User\",\n  \"interests\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user",    "title": "Get user profile",    "name": "GetUserProfile",    "group": "User",    "permission": [      {        "name": "authenticated user"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>A user's username</p>"          }        ]      }    },    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"Name\": \"John Doe\",\n  \"Username\": \"jdoe\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The username of the User was not found.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user/login",    "title": "Login user",    "name": "Login",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "jwt",            "description": "<p>JWT of user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"Authorization\": \"someCrazyLongAuthorizationToken\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "AuthError",            "description": "<p>Incorrect email or password.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>User wasn't found in the database.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"IncorrectCredentials\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UseNotFound\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "delete",    "url": "/user/logout",    "title": "Logout user",    "name": "Logout",    "group": "User",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "loggedOut",            "description": "<p>Boolean if logged out successfully.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"loggedOut\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user/passwordreset",    "title": "Reset password for user",    "name": "ResetPasswordFinal",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token pulled from URL</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password to use</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "passwordUpdated",            "description": "<p>Boolean if password updated successfully.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"passwordUpdated\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user",    "title": "Signup new user",    "name": "SignupUser",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password of user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of user.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "jwt",            "description": "<p>JWT for the user.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"Authorization\": \"someCrazyLongAuthorizationToken\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "PasswordTooShort",            "description": "<p>The password provided does not meet length requirements of &gt; 6 characters</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "emailTaken",            "description": "<p>The email provided is already in use</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UsernameTaken",            "description": "<p>The username provided is already taken</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "EmailTaken",            "description": "<p>That email is already in use.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Invalid request\n{\n  \"error\": \"PasswordTooShort\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Invalid request\n{\n  \"error\": \"EmailTaken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 400 Invalid request\n{\n  \"error\": \"UsernameTaken\"\n}",          "type": "json"        },        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"EmailTaken\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "put",    "url": "/user",    "title": "Update current user",    "name": "UpdateUser",    "group": "User",    "permission": [      {        "name": "authenticated user"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "interests",            "description": "<p>Selected interests of the User.</p>"          }        ]      }    },    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Username of the User.</p>"          },          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "email_verified",            "description": "<p>Bool if email_verified of the User.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "role",            "description": "<p>Role of the User.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "interests",            "description": "<p>Selected interests of the User.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"John Doe\",\n  \"email\": \"nick.mitrakos@gmail.com\",\n  \"username\": \"nmitrakos\",\n  \"email_verified\": false,\n  \"role\": \"User\",\n  \"interests\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user/verifyemail",    "title": "Verify email address",    "name": "VerifyEmail",    "group": "User",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Token pulled from URL</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "emailVerified",            "description": "<p>Boolean if verified successfully.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"emailVerified\": true\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/user.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/workout",    "title": "Create new workout",    "name": "CreateWorkout",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of workout.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>The workout which should likely be an array of objects.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the workout.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>The workout array.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"some name\",\n  \"workout\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "delete",    "url": "/workout/:workoutId",    "title": "Delete a workout",    "name": "DeleteWorkout",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      },      {        "name": "owner of the workout"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Bool",            "optional": false,            "field": "deleted",            "description": "<p>True if deleted successfully.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"deleted\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "get",    "url": "/workout/user/:userId",    "title": "Get other user's workout",    "name": "GetOtherUsersWorkout",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      },      {        "name": "eventually there will be a permission around who can access other user's workouts"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workouts",            "description": "<p>Array of the user's workouts.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"workouts\": [\n     {\n        \"name\": \"Some Workout\",\n        \"id\": 1\n     }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "get",    "url": "/workout/user/:userId/:workoutId",    "title": "Get other user's workouts",    "name": "GetOtherUsersWorkouts",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      },      {        "name": "eventually there will be a permission around who can access other user's workouts"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the workout.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>The workout array.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"Some Workout\",\n  \"workout\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "get",    "url": "/workout/:workoutId",    "title": "Get a specific workout",    "name": "GetWorkout",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      },      {        "name": "owner of the workout"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the workout.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>The workout array.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"Some Workout\",\n  \"workout\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "get",    "url": "/workout",    "title": "Get current user's workouts",    "name": "GetWorkouts",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workouts",            "description": "<p>Array of the user's workouts.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"workouts\": [\n     {\n        \"name\": \"Some Workout\",\n        \"id\": 1\n     }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  },  {    "type": "put",    "url": "/workout/:workoutId",    "title": "Update a workout",    "name": "UpdateWorkout",    "group": "Workout",    "permission": [      {        "name": "authenticated user"      },      {        "name": "owner of the workout"      }    ],    "header": {      "fields": {        "Authorization": [          {            "group": "Authorization",            "type": "String",            "optional": false,            "field": "authorization",            "description": "<p>Authorization token (normally a JWT included &quot;Bearer&quot; at the beginning, but please exclude that text before the token).</p>"          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of workout.</p>"          },          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>The updated workout.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Updated name of the workout.</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "workout",            "description": "<p>Updated workout array.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"name\": \"some workout\",\n  \"workout\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>Not an authorized or authenticated user.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 401 Not Found\n{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Error response\"\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "routers/workout.js",    "groupTitle": "Workout"  }]
